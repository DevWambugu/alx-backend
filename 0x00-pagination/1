#!/usr/bin/env python3
"""
0-simple_helper_function
"""
import csv
import math
from typing import List


def index_range(page, page_size):
    '''This function takes two integer arguments page and page_size
    and returns a tuple of size two containing a start
    index and an end index corresponding to the range of indexes
    to return in a list for those particular pagination parameters'''
    if page < 1 or page_size < 1:
        raise ValueError("Page size and page must be greater than one.")
    starting_index = (page - 1) * page_size
    ending_index = page * page_size
    return (starting_index, ending_index)


class Server:
    """Server class to paginate a database of popular baby names.
    """
    DATA_FILE = "Popular_Baby_Names.csv"

    def __init__(self):
        self.__dataset = None

    def dataset(self) -> List[List]:
        """Cached dataset
        """
        if self.__dataset is None:
            with open(self.DATA_FILE) as f:
                reader = csv.reader(f)
                dataset = [row for row in reader]
            self.__dataset = dataset[1:]
        return self.__dataset

    def get_page(self, page: int = 1, page_size: int = 10) -> List[List]:
        pass


def get_page(page=1, page_size=10):
    '''return an empty list or the index
    the requested page'''
    assert page > 0 and page_size > 0, "Page and page_size must be greater than 0."
    assert isinstance(page, int) and isinstance(page_size, int), "Both arguments must be integers."
    try:
        start_index, end_index = index_range(page, page_size)
        return self.dataset()[start_index:end_index]
    except ValueError:
        return []
